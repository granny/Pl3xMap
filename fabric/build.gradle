plugins {
    id 'java'
    id 'fabric-loom' version "$fabricLoomVersion"
}

group = "${rootProject.group}.fabric"
version = rootProject.version

repositories {
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        mavenContent { snapshotsOnly() }
    }
}

dependencies {
    compileOnly project(':core')

    minecraft "com.mojang:minecraft:$minecraftVersion"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:$fabricLoaderVersion"
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabricApiVersion"
    modImplementation include("cloud.commandframework:cloud-fabric:$cloudVersion")
    modImplementation include("net.kyori:adventure-platform-fabric:$adventureFabricVersion")
}

base {
    archivesName = "${rootProject.name}-${project.name}"
}

remapJar {
    dependsOn ":core:shadowJar"
}

processResources {
    filesMatching('fabric.mod.json') {
        expand(
                'name': rootProject.name,
                'group': project.group,
                'version': project.version,
                //'authors': authors, // fabric is dumb and wont compile with this :/
                'description': project.properties['description'],
                'fabricApiVersion': fabricApiVersion,
                'fabricLoaderVersion': fabricLoaderVersion,
                'minecraftVersion': minecraftVersion,
                'website': website,
                'sources': sources,
                'issues': issues,
        )
    }
}

loom {
    mixin {
        defaultRefmapName = 'pl3xmap.refmap.json'
    }
    accessWidenerPath = file('src/main/resources/pl3xmap.accesswidener')
    runConfigs.configureEach {
        ideConfigGenerated(true)
    }
}
